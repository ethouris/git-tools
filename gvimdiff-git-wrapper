#!/usr/bin/tclsh

# This tool does better job as default configuration of 'gvimdiff' used as a difftool.
# It does the same if both files exist and the file was just altered - plus prints 'DIFF' message on console.
# If the file has been added or deleted, it just prints the info on the screen and
# allows you to edit the new file (if added) or diff-edit the new file under the name
# of the deleted file, if you answer 'e' for the prompt.


# To use that, put the following lines in your .gitconfig file:
#
# [diff]
# 	tool = gvimdiffwrp
# 
# [difftool]
# 	prompt = no
# 
# [difftool.gvimdiffwrp]
#	cmd = gvimdiff-git-wrapper "\"$LOCAL\"" "\"$REMOTE\"" \""$BASE\""

# ^^^ IMPORTANT!!! These "double quoting" things are necessary so that
# names with spaces are correctly handled!


if { [info exists env(DISPLAY)] } {
	set vim gvim
} else {
	set vim vim
}

proc ask text {
	puts -nonewline $text
	flush stdout
}

set autoskip no
if { [info exists env(AUTOSKIP)] } {
	set as $env(AUTOSKIP)
	if { [string is bool $as] } {
		set autoskip $as
	}
}

set skipfiles ""
if { [info exists env(SKIPFILES)] } {
	set skipfiles $env(SKIPFILES)
}

proc answer {} {
	if { $::autoskip } {
		puts " (AUTOSKIP)"
		return ""
	}
	set a [gets stdin]
	return [string tolower [string index $a 0]]
}

lassign $argv older newer base

if { $older == "/dev/null" } {

	ask "NEW:  '$newer'  (e)dit/(s)kip/(d)elete from repo (NOT FROM FILESYSTEM) \[e/S/d\] "
	switch -- [answer] {
		e {
			exec $vim -f $newer
		}
		d {
			exec git rm --cached $newer
		}
	}
	exit 0
}

if { $newer == "/dev/null" } {
	ask "DELETED:  '$base' (e)dit as new/(s)kip \[e/S\] "
	if { [answer] == "e" } {
		exec $vim -f -d $older $base
	}
	exit 0
}

if { $base == "/dev/null" } {
	set base $older ;# Nothing else
}

foreach mask $skipfiles {
	if { [string match $mask $older] } {
		puts "SKIPPING (for $mask): '$base'"
		exit 0
	}
}

puts "DIFF: '$base'" ;# -- (PASSED: $argv)"
# This call to 'diff' ignores differences caused by Windows EOLs.
if { [catch {exec diff --strip-trailing-cr -q $older $newer}] } {
	exec $vim -f -d $older $newer
} else {
	puts " --- files '$older' and '$newer' don't differ!"
}
